import { NextResponse } from "next/server"

const faq: Record<string, string> = {
  "servicios ofrece":
    "üöÄ INGELEAN ofrece desarrollo de software, automatizaci√≥n industrial, mantenimiento preventivo, hardware y soluciones en IA.",
  ubicados: "üìç Estamos ubicados en Pereira, Risaralda - Colombia.",
  "horario de atenci√≥n": "üïí Nuestro horario de atenci√≥n es de lunes a viernes de 8:00 a.m. a 5:00 p.m.",
  cotizaci√≥n:
    "üíº Puedes solicitar una cotizaci√≥n escribi√©ndonos a contacto@ingelean.com o usando nuestro formulario web.",
  automatizaci√≥n: "‚öôÔ∏è S√≠, tenemos experiencia en automatizaci√≥n industrial para empresas del Eje Cafetero.",
  "soporte t√©cnico": "üõ†Ô∏è Ofrecemos soporte t√©cnico tanto presencial como remoto para nuestros clientes.",
  "ciudades trabajan": "üåé Principalmente en el Eje Cafetero, pero tambi√©n atendemos proyectos en todo el pa√≠s.",
  "soluciones de software": "üíª Desarrollamos soluciones a medida como ERP, CRM, sistemas de monitoreo, entre otros.",
  ventas: "üìû Puedes comunicarte con ventas al correo ventas@ingelean.com o al WhatsApp 300 123 4567.",
  "empresas peque√±as": "üè¢ S√≠, trabajamos con empresas de todos los tama√±os, incluyendo startups y pymes.",
  "inteligencia artificial": "ü§ñ Desarrollamos soluciones de IA personalizadas para optimizar procesos empresariales.",
  mantenimiento: "üîß Ofrecemos servicios de mantenimiento preventivo y correctivo para equipos industriales.",
  precios:
    "üí∞ Nuestros precios son competitivos y se ajustan al presupuesto de cada proyecto. ¬°Solicita tu cotizaci√≥n!",
  experiencia: "üìà Contamos con m√°s de 5 a√±os de experiencia en el sector tecnol√≥gico del Eje Cafetero.",
}

export async function POST(req: Request) {
  try {
    const { message } = await req.json()

    if (!message || typeof message !== "string") {
      return NextResponse.json({
        response: "‚ùå Por favor, env√≠a un mensaje v√°lido.",
      })
    }

    const lower = message.toLowerCase()
    const key = Object.keys(faq).find((k) => lower.includes(k))

    const response = key
      ? faq[key]
      : "ü§î Lo siento, por ahora solo puedo responder preguntas frecuentes sobre nuestros servicios. ¬øTe gustar√≠a que te contacte un asesor humano? Puedes escribirnos a contacto@ingelean.com"

    // Simulate a small delay for more realistic feel
    await new Promise((resolve) => setTimeout(resolve, 500))

    return NextResponse.json({ response })
  } catch (error) {
    console.error("Error in chat API:", error)
    return NextResponse.json(
      {
        response: "‚ùå Lo siento, ocurri√≥ un error interno. Por favor, intenta nuevamente.",
      },
      { status: 500 },
    )
  }
}
